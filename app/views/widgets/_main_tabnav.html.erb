<%  
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :main % > (just the tabnav) 
# or, if you want a boxed tabnav:
#   <% tabnav :main do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
#     
render_tabnav :main do 
    
  # this generates a tab for every controller in your app
  # you'll probably want to delete this and
  # add tabs one by one as shown below
  # controller_names.each do |name|
  #     add_tab do |t|
  #       t.named name.camelize
  #       t.titled "Go to #{name.camelize}"
  #       t.links_to :controller => name
  #     end
  #   end 
         
  add_tab do |t|
    t.named 'Home'
    t.titled 'Home Page'
    t.links_to root_path
    t.highlights_on :controller=> '/home'
  end 
  
  #  
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #  
  # # A tab can be initialized with a Hash like this:
  # 
  # add_tab :name => 'Home', :link => {:controller=>'home'}
  
  add_tab do |t|
    t.named 'Analysis'
    t.links_to :controller => 'analysis/home'
    t.highlights_on :controller=>'analysis/'
  end
  
  #
  # # You can have a dynamic name or link 
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #  
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside 
  #
  add_tab do |t|
    t.named 'Admin'
    t.links_to :controller => 'admin/home'
    t.highlights_on :controller=>'admin/'
  end if logged_in? && current_user.has_role?('admin')
end 
%>